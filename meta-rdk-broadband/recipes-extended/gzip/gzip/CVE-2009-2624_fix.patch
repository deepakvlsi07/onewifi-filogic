From cec5a17380b374733aef461fc0bd42ca8c5c99ba Mon Sep 17 00:00:00 2001
From: Alluri Revathi Bhavani <RevathiBhavani_Alluri@comcast.com>
Date: Mon, 8 May 2023 17:22:36 +0000
Subject: [PATCH] Date: AUG 18, 2009 From:
 39a362ae9d9b007473381dba5032f4dfc1744cf2 Subject: [PATCH] CVE-2009-2624
 Source:
 http://git.savannah.gnu.org/cgit/gzip.git/commit/?id=39a362ae9d9b007473381dba5032f4dfc1744cf2
 License: GPLV2 Upstream-Status:
 http://git.savannah.gnu.org/cgit/gzip.git/commit/?id=39a362ae9d9b007473381dba5032f4dfc1744cf2
 Signed-off-by: Jim Meyering / aallur481(RevathiBhavani_Alluri@comcast.com)

---
 NEWS      | 4 +++-
 inflate.c | 6 ++++--
 2 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/NEWS b/NEWS
index e03bcb3..8a36820 100644
--- a/NEWS
+++ b/NEWS
@@ -1,7 +1,9 @@
   gzip -d could segfault and/or clobber the stack, possibly leading to
   arbitrary code execution.  This affects x86_64 but not 32-bit systems.
   This fixes CVE-2010-0001.
-  For more details, see http://bugzilla.redhat.com/554418
+  For more details, see http://bugzilla.redhat.com/554418
+
+  gzip -d no longer segfaults on certain invalid inputs

 Major changes in Gzip 1.3.12 (2007-04-13)
 
diff --git a/inflate.c b/inflate.c
index 9f3a661..2f4954b 100644
--- a/inflate.c
+++ b/inflate.c
@@ -335,13 +335,15 @@ int *m;                 /* maximum lookup bits, returns actual */
   } while (--i);
   if (c[0] == n)                /* null input--all zero length codes */
   {
-    q = (struct huft *) malloc (2 * sizeof *q);
+    q = (struct huft *) malloc (3 * sizeof *q);
     if (!q)
       return 3;
-    hufts += 2;
+    hufts += 3;
     q[0].v.t = (struct huft *) NULL;
     q[1].e = 99;    /* invalid code marker */
     q[1].b = 1;
+    q[2].e = 99;    /* invalid code marker */
+    q[2].b = 1;
     *t = q + 1;
     *m = 1;
     return 0;
