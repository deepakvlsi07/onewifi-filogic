Source: Backport from later version of opensync
 
/*
  * ============================================================
diff --git a/src/lib/ds/src/ds_dlist.c.h b/src/lib/ds/src/ds_dlist.c.h
index 0c876ca..a57322b 100644
--- a/src/lib/ds/src/ds_dlist.c.h
+++ b/src/lib/ds/src/ds_dlist.c.h
@@ -196,6 +196,20 @@ static inline void *ds_dlist_remove_before(ds_dlist_t *list, void *before)
     return NODE_TO_CONT(node, list->od_cof);
 }
 
+/**
+ * Return the number of elements in a given list
+ *
+ * Beware: Current implementation is O(n).
+ */
+static inline size_t ds_dlist_len(ds_dlist_t *root)
+{
+    void *p;
+    size_t n = 0;
+    ds_dlist_foreach(root, p)
+        n++;
+    return n;
+}
+
 /*
  * ============================================================
  *  Iterator API
diff --git a/src/lib/ds/src/ds_tree.c.h b/src/lib/ds/src/ds_tree.c.h
index 4174236..e90cfc0 100644
--- a/src/lib/ds/src/ds_tree.c.h
+++ b/src/lib/ds/src/ds_tree.c.h
@@ -334,3 +334,17 @@ static inline ds_tree_node_t *ds_tree_node_prev(ds_tree_node_t *node)
 
     return node;
 }
+
+/**
+ * Return the number of elements in a given tree
+ *
+ * Beware: Current implementation is O(n).
+ */
+static inline size_t ds_tree_len(ds_tree_t *root)
+{
+    void *p;
+    size_t n = 0;
+    ds_tree_foreach(root, p)
+        n++;
+    return n;
+}
