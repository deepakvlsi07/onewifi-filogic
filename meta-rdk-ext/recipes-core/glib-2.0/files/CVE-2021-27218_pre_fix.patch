Date: Dec 30, 2023
From: acb7b0ec69f26a7df10af3992359890b09f076e8
Subject: Patch glib-2.0 to address CVE-2021-27218
Source:  gnome.org https://gitlab.gnome.org/GNOME/glib/-/merge_requests/1942/diffs?commit_id=acb7b0ec69f26a7df10af3992359890b09f076e8
License:
Upstream-Status: Pending
Signed-off-by: kmarim851 <Kalidoss_Marimuthu@comcast.com>
---
Index: glib-2.62.4/glib/gstrfuncs.c
===================================================================
--- glib-2.62.4.orig/glib/gstrfuncs.c
+++ glib-2.62.4/glib/gstrfuncs.c
@@ -398,6 +398,38 @@ g_memdup (gconstpointer mem,
 }
 
 /**
+ * g_memdup2:
+ * @mem: (nullable): the memory to copy.
+ * @byte_size: the number of bytes to copy.
+ *
+ * Allocates @byte_size bytes of memory, and copies @byte_size bytes into it
+ * from @mem. If @mem is %NULL it returns %NULL.
+ *
+ * This replaces g_memdup(), which was prone to integer overflows when
+ * converting the argument from a #gsize to a #guint.
+ *
+ * Returns: (nullable): a pointer to the newly-allocated copy of the memory,
+ *    or %NULL if @mem is %NULL.
+ * Since: 2.68
+ */
+gpointer
+g_memdup2 (gconstpointer mem,
+           gsize         byte_size)
+{
+  gpointer new_mem;
+
+  if (mem && byte_size != 0)
+    {
+      new_mem = g_malloc (byte_size);
+      memcpy (new_mem, mem, byte_size);
+    }
+  else
+    new_mem = NULL;
+
+  return new_mem;
+}
+
+/**
  * g_strndup:
  * @str: the string to duplicate
  * @n: the maximum number of bytes to copy from @str
Index: glib-2.62.4/glib/gstrfuncs.h
===================================================================
--- glib-2.62.4.orig/glib/gstrfuncs.h
+++ glib-2.62.4/glib/gstrfuncs.h
@@ -257,6 +257,10 @@ GLIB_AVAILABLE_IN_ALL
 gpointer              g_memdup	       (gconstpointer mem,
 					guint	       byte_size) G_GNUC_ALLOC_SIZE(2);
 
+GLIB_AVAILABLE_IN_ALL
+gpointer              g_memdup2        (gconstpointer mem,
+                                        gsize         byte_size) G_GNUC_ALLOC_SIZE(2);
+
 /* NULL terminated string arrays.
  * g_strsplit(), g_strsplit_set() split up string into max_tokens tokens
  * at delim and return a newly allocated string array.
