Date: Nov 30, 2023
From: 0ef151550d96cc4460f98832df84b4a1e87c65e9
Subject: Patch iperf3 to address CVE-2023-38403
Source:  Gitlab  https://github.com/esnet/iperf/commit/0ef151550d96cc4460f98832df84b4a1e87c65e9
License:
Upstream-Status: Pending
Signed-off-by: kmarim851 <Kalidoss_Marimuthu@comcast.com>
---
Index: git/src/iperf_api.c
===================================================================
--- git.orig/src/iperf_api.c
+++ git/src/iperf_api.c
@@ -2141,6 +2141,7 @@ static cJSON *
 JSON_read(int fd)
 {
     uint32_t hsize, nsize;
+    size_t strsize;
     char *str;
     cJSON *json = NULL;
     int rc;
@@ -2153,25 +2154,31 @@ JSON_read(int fd)
     if (Nread(fd, (char*) &nsize, sizeof(nsize), Ptcp) >= 0) {
 	hsize = ntohl(nsize);
 	/* Allocate a buffer to hold the JSON */
-	str = (char *) calloc(sizeof(char), hsize+1);	/* +1 for trailing null */
-	if (str != NULL) {
-	    rc = Nread(fd, str, hsize, Ptcp);
-	    if (rc >= 0) {
-		/*
-		 * We should be reading in the number of bytes corresponding to the
-		 * length in that 4-byte integer.  If we don't the socket might have
-		 * prematurely closed.  Only do the JSON parsing if we got the
-		 * correct number of bytes.
-		 */
-		if (rc == hsize) {
-		    json = cJSON_Parse(str);
-		}
-		else {
-		    printf("WARNING:  Size of data read does not correspond to offered length\n");
-		}
+	strsize = hsize + 1;              /* +1 for trailing NULL */
+        if (strsize) {
+            str = (char *) calloc(sizeof(char), strsize);
+	    if (str != NULL) {
+	        rc = Nread(fd, str, hsize, Ptcp);
+	        if (rc >= 0) {
+		    /*
+		     * We should be reading in the number of bytes corresponding to the
+		     * length in that 4-byte integer.  If we don't the socket might have
+		     * prematurely closed.  Only do the JSON parsing if we got the
+		     * correct number of bytes.
+		     */
+		    if (rc == hsize) {
+		        json = cJSON_Parse(str);
+		    }
+		    else {
+		        printf("WARNING:  Size of data read does not correspond to offered length\n");
+		    }
+	        }
 	    }
+	    free(str);
+	}
+	else {
+            printf("WARNING:  Data length overflow\n");
 	}
-	free(str);
     }
     return json;
 }
